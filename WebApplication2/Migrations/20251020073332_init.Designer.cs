// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication2.Models;

#nullable disable

namespace WebApplication2.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251020073332_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CompetetionTeam", b =>
                {
                    b.Property<int>("competetionsId")
                        .HasColumnType("int");

                    b.Property<int>("teamsId")
                        .HasColumnType("int");

                    b.HasKey("competetionsId", "teamsId");

                    b.HasIndex("teamsId");

                    b.ToTable("CompetetionTeam");
                });

            modelBuilder.Entity("WebApplication2.Models.Coach", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ExperienceYears")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Specialization")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Coaches");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ExperienceYears = 5,
                            Name = "Essam Ahmed",
                            Specialization = "Football"
                        },
                        new
                        {
                            Id = 2,
                            ExperienceYears = 3,
                            Name = "Ahmed Elsayed",
                            Specialization = "VollyBall"
                        },
                        new
                        {
                            Id = 3,
                            ExperienceYears = 8,
                            Name = "Kareem Magdy",
                            Specialization = "BasketBall"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Competetion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("competetions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2025, 10, 20, 7, 33, 32, 245, DateTimeKind.Utc).AddTicks(4823),
                            Location = "France",
                            Title = "Fifa WorldCup"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2025, 10, 20, 7, 33, 32, 245, DateTimeKind.Utc).AddTicks(4827),
                            Location = "Egypt",
                            Title = "Africa Cup"
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TeamId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 35,
                            FullName = "Mohammed Salah",
                            Position = "Striker",
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            Age = 25,
                            FullName = "Mohammed Ahmed",
                            Position = "GoalKeeper",
                            TeamId = 2
                        });
                });

            modelBuilder.Entity("WebApplication2.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CoachId")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Cairo",
                            CoachId = 1,
                            Name = "Al-Ahly"
                        },
                        new
                        {
                            Id = 2,
                            City = "Giza",
                            CoachId = 2,
                            Name = "Madrid"
                        });
                });

            modelBuilder.Entity("CompetetionTeam", b =>
                {
                    b.HasOne("WebApplication2.Models.Competetion", null)
                        .WithMany()
                        .HasForeignKey("competetionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication2.Models.Team", null)
                        .WithMany()
                        .HasForeignKey("teamsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.Player", b =>
                {
                    b.HasOne("WebApplication2.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("WebApplication2.Models.Team", b =>
                {
                    b.HasOne("WebApplication2.Models.Coach", "Coach")
                        .WithOne("Team")
                        .HasForeignKey("WebApplication2.Models.Team", "CoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("WebApplication2.Models.Coach", b =>
                {
                    b.Navigation("Team")
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication2.Models.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
